{"version":3,"sources":["webpack:///js/index.b29664f719b2487b3bca.js","webpack:///./src/index.js"],"names":["webpackJsonp","2","module","__webpack_exports__","__webpack_require__","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0_spa_history__","n","console","log"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAAUC,EAAQC,EAAqBC,GAE7C,YACAC,QAAOC,eAAeH,EAAqB,cAAgBI,OAAO,GCNlE,IAAAC,GAAAJ,EAAA,EAAAA,GAAAK,EAAAD,EAkDAE,SAAQC,IAAI,eACZD,QAAQC,IAAI,WACZD,QAAQC,IAAI,wBDcT","file":"js/index.b29664f719b2487b3bca.js","sourcesContent":["webpackJsonp([1],{\n\n/***/ 2:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_spa_history__ = __webpack_require__(0);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_spa_history___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_spa_history__);\n// // 引入作为全局对象储存空间的global.js, js文件可以省略后缀\n// import g from './global'\n//\n// // 引入页面文件\n// import foo from './views/foo'\n// import bar from './views/bar'\n//\n// const routes = {\n//   '/foo': foo,\n//   '/bar': bar\n// }\n//\n// // Router类, 用来控制页面根据当前URL切换\n// class Router {\n//   start() {\n//     // 点击浏览器后退/前进按钮时会触发window.onpopstate事件, 我们在这时切换到相应页面\n//     // https://developer.mozilla.org/en-US/docs/Web/Events/popstate\n//     window.addEventListener('popstate', () => {\n//       this.load(location.pathname)\n//     })\n//\n//     // 打开页面时加载当前页面\n//     this.load(location.pathname)\n//   }\n//\n//   // 前往path, 会变更地址栏URL, 并加载相应页面\n//   go(path) {\n//     // 变更地址栏URL\n//     history.pushState({}, '', path)\n//     // 加载页面\n//     this.load(path)\n//   }\n//\n//   // 加载path路径的页面\n//   load(path) {\n//     // 创建页面实例\n//     const view = new routes[path]()\n//     // 调用页面方法, 把页面加载到document.body中\n//     view.mount(document.body)\n//   }\n// }\n//\n// // new一个路由对象, 赋值为g.router, 这样我们在其他js文件中可以引用到\n// g.router = new Router()\n// // 启动\n// g.router.start()\n\n/* eslint-disable */\n\n\nconsole.log('hello world');\nconsole.log('webpack');\nconsole.log('something changed');\n/* eslint-disable */\n\n/***/ })\n\n},[2]);\n\n\n// WEBPACK FOOTER //\n// js/index.b29664f719b2487b3bca.js","// // 引入作为全局对象储存空间的global.js, js文件可以省略后缀\n// import g from './global'\n//\n// // 引入页面文件\n// import foo from './views/foo'\n// import bar from './views/bar'\n//\n// const routes = {\n//   '/foo': foo,\n//   '/bar': bar\n// }\n//\n// // Router类, 用来控制页面根据当前URL切换\n// class Router {\n//   start() {\n//     // 点击浏览器后退/前进按钮时会触发window.onpopstate事件, 我们在这时切换到相应页面\n//     // https://developer.mozilla.org/en-US/docs/Web/Events/popstate\n//     window.addEventListener('popstate', () => {\n//       this.load(location.pathname)\n//     })\n//\n//     // 打开页面时加载当前页面\n//     this.load(location.pathname)\n//   }\n//\n//   // 前往path, 会变更地址栏URL, 并加载相应页面\n//   go(path) {\n//     // 变更地址栏URL\n//     history.pushState({}, '', path)\n//     // 加载页面\n//     this.load(path)\n//   }\n//\n//   // 加载path路径的页面\n//   load(path) {\n//     // 创建页面实例\n//     const view = new routes[path]()\n//     // 调用页面方法, 把页面加载到document.body中\n//     view.mount(document.body)\n//   }\n// }\n//\n// // new一个路由对象, 赋值为g.router, 这样我们在其他js文件中可以引用到\n// g.router = new Router()\n// // 启动\n// g.router.start()\n\n /* eslint-disable */\r\nimport SpaHistory from 'spa-history'\n\r\nconsole.log('hello world')\nconsole.log('webpack');\r\nconsole.log('something changed');\r\n /* eslint-disable */\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js"],"sourceRoot":""}